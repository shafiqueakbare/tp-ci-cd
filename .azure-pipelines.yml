trigger:
  branches:
    include: [ main ]

pr:
  branches:
    include: [ main, feature/* ]

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: CI
  displayName: "Terraform CI (dev & prod)"
  jobs:
  - job: terraform_ci
    displayName: "fmt, validate, plan (speculative)"
    steps:
    - checkout: self

    - task: TerraformInstaller@1
      displayName: "Install Terraform"
      inputs:
        terraformVersion: '1.9.5'

    - script: terraform fmt -recursive -check
      displayName: "terraform fmt -check"

    - script: |
        terraform init -backend=false -input=false
        terraform validate
      displayName: "terraform init (no backend) & validate"

    - script: |
        echo "=== PLAN DEV ==="
        terraform plan -input=false -refresh=false -no-color \
          -var-file=envs/dev.tfvars -out=tfplan-dev
        echo "=== PLAN PROD ==="
        terraform plan -input=false -refresh=false -no-color \
          -var-file=envs/prod.tfvars -out=tfplan-prod
      displayName: "terraform plan (dev & prod) - speculative"
      continueOnError: true

    - task: PublishBuildArtifacts@1
      displayName: "Publish plan artifacts"
      inputs:
        pathtoPublish: '.'
        artifactName: 'tfplans'
      condition: succeededOrFailed()

